---
# tasks file for grid-install


# tasks file for pre-setup
- name: Ping hosts
  ping:
- block:
    - name: Ping hosts
      ping:
    - name: Check if volume group rootvg exists
      shell: vgdisplay rootvg
      register: vg_info
      ignore_errors: true
    - name: Create volume group rootvg if not present
      command: vgcreate rootvg /dev/sda2
      when: vg_info.rc != 0
    - name: Check if logical volumes exist
      shell:
        cmd: lvs /dev/rootvg/{{ item.lv }} 2>/dev/null
      register: lvs_result
      loop:
        - { lv: "optmqm" }
        - { lv: "varmqm" }
        - { lv: "mqmlog" }
        - { lv: "mqmerror" }
        - { lv: "mqmtrace" }
    - name: Create logical volumes if not present
      lvol:
        vg: rootvg
        lv: "{{ item.lv }}"
        size: "{{ item.size }}"
        state: present
      loop: "{{ lvs_result.results | rejectattr('rc', 'defined') | map(attribute='item') | list }}"
    - name: Check if filesystem exists on logical volumes
      shell:
        cmd: fsck -N /dev/rootvg/{{ item.lv }} | grep -q 'XFS'
      register: fsck_result
      failed_when: false
      ignore_errors: true
      loop:
        - { lv: "optmqm" }
        - { lv: "varmqm" }
        - { lv: "mqmlog" }
        - { lv: "mqmerror" }
        - { lv: "mqmtrace" }

    - name: Format logical volumes with XFS filesystem if not already formatted
      command:
        cmd: mkfs.xfs /dev/rootvg/{{ item.lv }}
      loop: "{{ fsck_result.results | rejectattr('rc', 'defined') | map(attribute='item') | list }}"
      when: item is defined
    - name: Create user mqm
      user:
        name: mqm
        state: present
    - name: Check if directories exist
      stat:
        path: "{{ item.path }}"
      register: dir_stat
      loop:
        - { path: '/opt/mqm' }
        - { path: '/var/mqm' }
        - { path: '/var/mqm/trace' }
        - { path: '/var/mqm/errors' }
        - { path: '/var/mqm/log' }

    - name: Create directories if not present
      file:
        path: "{{ item.path }}"
        state: directory
        owner: "{{ item.owner }}"
        group: "{{ item.group }}"
        mode: "{{ item.mode }}"
      loop: "{{ dir_stat.results | rejectattr('stat.exists', 'defined') | map(attribute='item') | list }}"

    - name: Check if directories are already mounted
      shell:
        cmd: findmnt --noheadings --list --output TARGET | grep -q "{{ item.path }}"
      register: mounted_result
      loop:
        - { path: '/opt/mqm' }
        - { path: '/var/mqm' }
        - { path: '/var/mqm/trace' }
        - { path: '/var/mqm/errors' }
        - { path: '/var/mqm/log' }

    - name: Mount directories if not already mounted
      mount:
        path: "{{ item.path }}"
        src: "{{ item.lv }}"
        fstype: xfs
        state: mounted
      loop: "{{ mounted_result.results | rejectattr('rc', 'defined') | map(attribute='item') | list }}"
      loop_control:
        label: "{{ item.path }}"
      when: item is defined
  become: yes

 
